<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="red.semipro.domain.repository.seminar.SeminarRepository">

    <resultMap id="seminarResultMap" type="red.semipro.domain.model.seminar.Seminar">
        <id property="id" column="seminar_id"/>
        <result property="openingStatus" column="opening_status"/>
        <association property="goal" javaType="red.semipro.domain.model.seminar.SeminarGoal">
            <id property="seminarId" column="goal_seminar_id"/>
            <result property="seminarType" column="seminar_type"/>
            <result property="minimumNumber" column="minimum_number"/>
            <result property="entryEndingAt" column="entry_ending_at"/>
            <result property="successCondition" column="success_condition"/>
            <result property="seminarStartingAt" column="seminar_starting_at"/>
            <result property="seminarEndingAt" column="seminar_ending_at"/>
            <association property="place" javaType="red.semipro.domain.model.seminar.SeminarPlace">
                <id property="seminarId" column="place_seminar_id"/>
                <result property="placeArrangement" column="place_arrangement"/>
                <result property="prefecture.id" column="prefecture_id"/>
                <result property="prefecture.name" column="prefecture_name"/>
                <result property="city.id" column="city_id"/>
                <result property="city.name" column="city_name"/>
                <result property="address" column="address"/>
                <result property="place" column="place"/>
                <result property="lat" column="lat"/>
                <result property="lng" column="lng"/>
            </association>
        </association>
        <association property="account" javaType="red.semipro.domain.model.account.Account">
            <id property="id" column="account_id"/>
            <result property="email" column="email"/>
            <result property="username" column="username"/>
            <association property="stripeConnect" javaType="red.semipro.domain.model.account.AccountStripeConnect">
                <id property="id" column="account_stripe_connect_id"/>
                <result property="accountId" column="account_stripe_connect_account_id"/>
                <result property="stripeConnectAccountId" column="stripe_connect_account_id"/>
            </association>
            <association property="stripeCustomer" javaType="red.semipro.domain.model.account.AccountStripeCustomer">
                <id property="id" column="account_stripe_customer_id"/>
                <result property="accountId" column="account_stripe_customer_account_id"/>
                <result property="stripeCustomerId" column="stripe_customer_id"/>
            </association>
        </association>
        <association property="overview" javaType="red.semipro.domain.model.seminar.SeminarOverview">
            <id property="seminarId" column="overview_seminar_id"/>
            <result property="title" column="title"/>
            <result property="summary" column="summary"/>
            <result property="lecturerProfile" column="lecturer_profile"/>
            <result property="mainImageExtension" column="main_image_extension"/>
        </association>
        <association property="contents" javaType="red.semipro.domain.model.seminar.SeminarContents">
            <id property="seminarId" column="contents_seminar_id"/>
            <result property="contents" column="contents"/>
        </association>
        <association property="option" javaType="red.semipro.domain.model.seminar.SeminarOption">
            <id property="seminarId" column="seminar_id"/>
            <result property="shootingSupport" column="shooting_support"/>
            <result property="shootingEditSupport" column="shooting_edit_support"/>
            <result property="movieSalesSupport" column="movie_sales_support"/>
        </association>
        <association property="entrySummary" javaType="red.semipro.domain.model.seminar.SeminarEntrySummary">
            <id property="seminarId" column="entry_summary_seminar_id"/>
            <result property="entryCount" column="entry_count"/>
        </association>
        <collection property="ticketList" ofType="red.semipro.domain.model.seminar.SeminarTicket">
            <id property="id" column="ticket_id"/>
            <result property="seminarId" column="ticket_seminar_id"/>
            <result property="name" column="ticket_name"/>
            <result property="price" column="ticket_price"/>
            <result property="capacity" column="ticket_capacity"/>
        </collection>
    </resultMap>

    <select id="findOneWithDetails" resultMap="seminarResultMap">
        <include refid="baseSelectPhrase"/>
        <include refid="baseFromPhrase"/>
        <include refid="baseWherePhrase"/>
    </select>

    <select id="findOneWithDetailsForUpdate" resultMap="seminarResultMap">
        <include refid="baseSelectPhrase"/>
        <include refid="baseFromPhrase"/>
        <include refid="baseWherePhrase"/>
        FOR UPDATE
    </select>

    <select id="findAll" resultMap="seminarResultMap">
        <include refid="baseSelectPhrase"/>
        <include refid="baseFromPhrase"/>
        <include refid="baseWherePhrase"/>
    </select>

    <select id="countByCriteria" resultType="_long">
        SELECT COUNT(*)
        <include refid="baseFromPhrase"/>
        <include refid="findPageByCriteriaWherePhrase"/>
    </select>

    <select id="findPageByCriteria" resultMap="seminarResultMap">
        <include refid="baseSelectPhrase"/>
        <include refid="baseFromPhrase"/>
        <include refid="findPageByCriteriaWherePhrase"/>
        <choose>
            <when test="!pageable.sort.isUnsorted()">
                ORDER BY
                <foreach item="order" collection="pageable.sort" separator=",">
                    ${order.property}
                    ${order.direction}
                </foreach>
            </when>
            <otherwise>
                ORDER BY entry_ending_at DESC
            </otherwise>
        </choose>
        LIMIT
        #{pageable.pageSize}
        OFFSET
        #{pageable.offset}
    </select>

    <sql id="baseSelectPhrase">
        SELECT
        seminar.id seminar_id
        , seminar.opening_status
        , seminar_goal.seminar_id goal_seminar_id
        , seminar_goal.seminar_type
        , seminar_goal.minimum_number
        , seminar_goal.entry_ending_at
        , seminar_goal.success_condition
        , seminar_goal.seminar_starting_at
        , seminar_goal.seminar_ending_at
        , account.id account_id
        , account.email
        , account.username
        , account_stripe_connect.id account_stripe_connect_id
        , account_stripe_connect.account_id account_stripe_connect_account_id
        , account_stripe_connect.stripe_connect_account_id
        , account_stripe_customer.id account_stripe_customer_id
        , account_stripe_customer.account_id account_stripe_customer_account_id
        , account_stripe_customer.stripe_customer_id
        , seminar_overview.seminar_id overview_seminar_id
        , seminar_overview.title
        , seminar_overview.summary
        , seminar_overview.lecturer_profile
        , seminar_overview.main_image_extension
        , seminar_contents.seminar_id contents_seminar_id
        , seminar_contents.contents
        , seminar_option.shooting_support
        , seminar_option.shooting_edit_support
        , seminar_option.movie_sales_support
        , seminar_ticket.id ticket_id
        , seminar_ticket.seminar_id ticket_seminar_id
        , seminar_ticket.name ticket_name
        , seminar_ticket.price ticket_price
        , seminar_ticket.capacity ticket_capacity
        , seminar_place.seminar_id place_seminar_id
        , seminar_place.place_arrangement
        , prefecture.id prefecture_id
        , prefecture.name prefecture_name
        , city.id city_id
        , city.name city_name
        , seminar_place.address
        , seminar_place.place
        , seminar_place.lat
        , seminar_place.lng
        , seminar_entry_summary.seminar_id entry_summary_seminar_id
        , seminar_entry_summary.entry_count
    </sql>

    <sql id="baseFromPhrase">
        FROM seminar
        INNER JOIN account ON seminar.account_id = account.id
        LEFT OUTER JOIN account_stripe_connect ON account.id = account_stripe_connect.account_id
        LEFT OUTER JOIN account_stripe_customer ON account.id = account_stripe_customer.account_id
        LEFT OUTER JOIN seminar_goal ON seminar.id = seminar_goal.seminar_id
        LEFT OUTER JOIN seminar_overview ON seminar.id = seminar_overview.seminar_id
        LEFT OUTER JOIN seminar_contents ON seminar.id = seminar_contents.seminar_id
        LEFT OUTER JOIN seminar_option ON seminar.id = seminar_option.seminar_id
        LEFT OUTER JOIN seminar_ticket ON seminar.id = seminar_ticket.seminar_id
        LEFT OUTER JOIN seminar_place ON seminar.id = seminar_place.seminar_id
        LEFT OUTER JOIN prefecture ON seminar_place.prefecture_id = prefecture.id
        LEFT OUTER JOIN city ON prefecture.id = city.prefecture_id AND seminar_place.city_id = city.id
        LEFT OUTER JOIN seminar_entry_summary ON seminar.id = seminar_entry_summary.seminar_id
    </sql>

    <sql id="baseWherePhrase">
        <where>
            <if test="criteria.id != null">
                seminar.id = #{criteria.id}
            </if>
            <if test="criteria.accountId != null">
                AND seminar.account_id = #{criteria.accountId}
            </if>
            <if test="criteria.openingStatus != null">
                AND seminar.opening_status = #{criteria.openingStatus.value}
            </if>
            <if test="criteria.openingStatusList != null">
                AND seminar.opening_status IN
                <foreach item="openingStatus" collection="criteria.openingStatusList"
                    open="(" separator="," close=")">
                    #{openingStatus.value}
                </foreach>
            </if>
            <if test="criteria.seminarTicketId != null">
                AND seminar_ticket.id = #{criteria.seminarTicketId}
            </if>
            <if test="criteria.executionDate != null">
                AND #{criteria.executionDate} <![CDATA[ > ]]> seminar_goal.entry_ending_at
            </if>
        </where>
    </sql>

    <sql id="findPageByCriteriaWherePhrase">
        <where>
            <if test="criteria.beforeEntryEndingAt">
                CURRENT_TIMESTAMP <![CDATA[ <= ]]> seminar_goal.entry_ending_at
            </if>
            <if test="criteria.openingStatus != null">
                AND seminar.opening_status = #{criteria.openingStatus.value}
            </if>
            <if test="criteria.accountId != null">
                AND seminar.account_id = #{criteria.accountId}
            </if>
        </where>
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO seminar (
            opening_status
            , account_id
        ) VALUES (
            #{openingStatus.value}
            , #{account.id}
        )
    </insert>

    <update id="updateOpeningStatus">
        UPDATE seminar SET
            opening_status = #{openingStatus.value}
            , updated_at = CURRENT_TIMESTAMP
        WHERE
            id = #{id}
    </update>

</mapper>