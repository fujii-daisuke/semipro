#version: 2.1
#
#orbs:
#  maven: circleci/maven@0.0.12
#
#workflows:
#  maven_test:
#    jobs:
#      - maven/test # checkout, build, test, and upload test results
#
#
version: 2.1

orbs:
  maven: circleci/maven@1.0.0

executors:
  my-executor:
    docker:
      - image: 'codeaches/openjdk:12-jdk'

#working_directory: '~/circleci-semipro'

jobs:
  build: # Workflows を使用しない実行では、エントリポイントとして `build` ジョブが必要
    working_directory: ~/circleci-semipro # ステップが実行されるディレクトリ
    docker: # Docker でステップを実行します
      - image: 'codeaches/openjdk:12-jdk' # このイメージをすべての `steps` が実行されるプライマリコンテナとして使用します
    steps: # 実行可能コマンドの集合
      - checkout # ソースコードを作業ディレクトリにチェックアウトします
      - restore_cache: # 初回実行後、または `pom.xml` が変更されている場合に、保存されているキャッシュを復元します
          # 依存関係キャッシュについては https://circleci.com/docs/ja/2.0/caching/ をお読みください
          key: circleci-semipro-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline # プロジェクトの依存関係を取得します
      - save_cache: # プロジェクトの依存関係を保存します
          paths:
            - ~/.m2
          key: circleci-semipro-{{ checksum "pom.xml" }}
      - run: mvn package # 実際のテストを実行します
      - store_test_results:
          path: semipro-web/target/surefire-reports
#      - store_artifacts:
#          path: semipro-admin/target/semipro-admin-0.0.1-SNAPSHOT.war
#      - store_artifacts:
#          path: semipro-batch/target/semipro-batch-0.0.1-SNAPSHOT.war
#      - store_artifacts:
#          path: semipro-web/target/semipro-web-0.0.1-SNAPSHOT.war

      - run: |
          mkdir ~/circleci-semipro/target
          cp ~/circleci-semipro/semipro-admin/target/semipro-admin-0.0.1-SNAPSHOT.war ~/circleci-semipro/target
          cp ~/circleci-semipro/semipro-batch/target/semipro-batch-0.0.1-SNAPSHOT.war ~/circleci-semipro/target
          cp ~/circleci-semipro/semipro-web/target/semipro-web-0.0.1-SNAPSHOT.war ~/circleci-semipro/target
          cp ~/circleci-semipro/appspec.yml ~/circleci-semipro/target
      - persist_to_workspace:
          root: ~/circleci-semipro
          paths:
            - target

  deploy:
    docker:
      - image: cdssnc/aws-cli
#      - image: circleci/python:2.7-jessie
    steps:
      - run:
          name: "Set AWS region"
          command: aws configure set region ap-northeast-1
#      - run:
#          name: "Run AWS CodeDeploy"
#          command: aws deploy create-deployment ¥
#            --application-name ${DEPLOY_APPLICATION} ¥
#            --deployment-group-name ${DEPLOY_GROUP} ¥
#            --github-location repository="${DEPLOY_REPOSITORY}",commitId="${CIRCLE_SHA1}"
      - attach_workspace:
          at: ~/circleci-semipro
#      - run:
#          name: "adminを S3 にデプロイ"
#          command: aws s3 sync ~/circleci-semipro/semipro-admin/target/ s3://semipro-deploy/production/admin/ --delete
#      - run:
#          name: "batchを S3 にデプロイ"
#          command: aws s3 sync ~/circleci-semipro/semipro-batch/target/ s3://semipro-deploy/production/batch/ --delete
#      - run:
#          name: "webを S3 にデプロイ"
#          command: aws s3 sync ~/circleci-semipro/semipro-web/target/ s3://semipro-deploy/production/web/ --delete
      - run:
          name: "deploy on s3"
          command: >-
            aws deploy push
            --application-name ${DEPLOY_APPLICATION}
            --description "This is a revision for the application semipro app."
            --ignore-hidden-files
            --s3-location s3://${S3_BUCKET}/${S3_KEY}
            --source ~/circleci-semipro/target/
      - run:
          name: "Run AWS CodeDeploy"
          command: >-
            aws deploy create-deployment
            --application-name ${DEPLOY_APPLICATION}
            --s3-location bucket=${S3_BUCKET},key=${S3_KEY},bundleType=zip,eTag=${ETAG}
            --deployment-group-name ${DEPLOY_GROUP}
workflows:
  version: 2
  build_deploy:
    jobs:
#      - maven/test:
#          executor: my-executor
##          command: '-X verify'
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master