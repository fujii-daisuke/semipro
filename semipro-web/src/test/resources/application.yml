spring:
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/semipro?autoReconnect=true&useSSL=false
    username: ${DB_USER}
    password: ${DB_PASSWORD}
#    url: jdbc:mysql://semipro.cluster-ciifr12zggfw.ap-northeast-1.rds.amazonaws.com:3306/semipro?autoReconnect=true&useSSL=false
#    username: fujii_daisuke
#    password: orehatsuiteiru
    driverClassName: com.mysql.jdbc.Driver
    tomcat:
      maxActive: 4
      maxIdle: 4
      minIdle: 0
      initialSize: 4
  messages:
    basename: i18n/messages
    cacheDuration: -1
    encoding: UTF-8
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SMTP_USER}
    password: ${SMTP_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
  thymeleaf:
    cache: false
  servlet:
    multipart:
      enabled: true
      maxFileSize: 10MB
      maxRequestSize: 10MB

server:
  port: 8080
#  port: 8085 
logging:
  level:
    root: info
    org.springframework.web: debug
    red.semipro: debug
    red.semipro.domain.repository: debug

# application settings
#custom:
#  application:
#    key1: app_a
#    key2: app_b
#    key3: ajToeoe04jtmtU
#  domain:
#    key1: domain_c
#    key2: domain_d
#  common:
#    key1: common_e
#    key2: common_f
#    datePattern: yyyy-MM-dd

mybatis:
#  mapperLocations: classpath:sqlMapper/*.xml
  type-handlers-package: red.semipro.domain.typehandler

cloud:
  aws:
    credentials:
      instanceProfile: false
    stack:
      auto: false
    region:
      auto: false
      static: ap-northeast-1

# application settings
custom:
  application:
    schema:
      http
    domain:
      localhost:8080
    # 秒/分/時/日/月/曜日
    cron:
      eventon: 0 0 3 * * *
    email:
      fromEmail: d.ziifuu@gmail.com
  aws.s3.bucket: semipro-dev
  aws.s3.seminar.path: upload/seminar/
  stripe.secret.key: ${STRIPE_SECRET_KEY}
  stripe.public.key: ${STRIPE_PUBLIC_KEY}